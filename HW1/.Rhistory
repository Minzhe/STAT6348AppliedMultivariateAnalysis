a = 61
b = 2
c = 6
d = 25
2*a*d - 2*b*c
b^2 + c^2 + a*b + a*c + 2*a*d + b*d + c*d
3026/3778
source("http://bioconductor.org/biocLite.R")
biocLite()
install.packages("gRain")
library(gRain)
install.packages("RBGL")
install.packages("gRbase")
library(gRain)
biocLite("RBGL")
library(gRain)
graph <- ug("A:B:E + C:E:D")
class(graph)
graph
install.packages("Rgraphviz")
install.package("Rgraphviz")
install.packages("Rgraphviz")
biocLite("Rgraphviz")
library(Rgraphviz)
plot(graph)
dag <- dag("A + B:A + C:B + D:B + E:C:D")
dag
plot(dag)
DJ.data <- read.table("Dow-Jones.industrial.index.txt", row.names = 1)
DJ.ts <- ts(DJ.data, frequency = 12, start = c(1968, 8), names = "Dow-Jones industrial index")
par.default <- par()
par(mfrow = c(1, 2))
acf(DJ.ts)
pacf(DJ.ts)
plot.ts(DJ.ts)
acf(diff(bank.ts))
pacf(diff(bank.ts))
par(mfrow = c(1, 2))
acf(diff(DJ.ts))
pacf(diff(DJ.ts))
decompose(DJ.ts)
plot(decompose(DJ.ts))
stl(DJ.ts)
stl(as.double(DJ.ts))
stl(ts(as.double(DJ.ts), frequency = 12))
stl(ts(as.double(DJ.ts), frequency = 12), s.window = "periodic")
plot(stl(ts(as.double(DJ.ts), frequency = 12), s.window = "periodic"))
ts(as.double(DJ.ts), frequency = 12)
DJ.ts
Box.test(DJ.ts)
Box.test(DJ.ts, lag = 20)
tsdiag(DJ.ts)
DJ.data <- read.table("Dow-Jones.industrial.index.txt", row.names = 1)
DJ.ts <- ts(DJ.data, frequency = 12, start = c(1968, 8), names = "Dow-Jones industrial index")
par.default <- par()
acf(DJ.ts)
pacf(DJ.ts)
acf(DJ.ts)
plot.ts(DJ.ts)
DJ.stl <- stl(DJ.ts)
DJ.data
class(DJ.data)
class(DJ.data$V2)
DJ.ts <- ts(DJ.data[,1], frequency = 12, start = c(1968, 8), names = "Dow-Jones industrial index")
DJ.stl <- stl(DJ.ts)
DJ.stl <- stl(DJ.ts, s.window = 12)
plot(DJ.stl)
tsdiag(DJ.stl)
library(forecast)
forecast.stl(DJ.stl, h = 1)
forecast.stl(DJ.stl, h = 12)
plot(forecast.stl(DJ.stl, h = 12))
str(forecast.stl(DJ.stl, h = 12))
DJ.stl$time.series
plot(DJ.stl$time.series)
plot(DJ.stl$time.series$seasonal)
plot(DJ.stl$time.series$[,1])
plot(DJ.stl$time.series[,1])
DJ.fcst <- forecast.stl(DJ.stl, h = 12)
plot(DJ.fcst$seasonal)
plot(c(DJ.stl$time.series[,1], DJ.fcst$seasonal)
)
c(DJ.stl$time.series[,1], DJ.fcst$seasonal)
ts.union(DJ.stl$time.series[,1], DJ.fcst$seasonal)
ts.intersect(DJ.stl$time.series[,1], DJ.fcst$seasonal)
DJ.fcst
DJ.fcst$seasonal
tail(DJ.ts)
plot(DJ.fcst$residuals)
Box.test(DJ.fcst$residuals)
Box.test(DJ.fcst$residuals, lag = 20)
auto.arima(DJ.fcst$residuals)
auto.arima(DJ.ts)
bank.data <- read.table("ReserveBankofAusatraliadata.txt")
bank.ts <- ts(bank.data, frequency = 12, start = c(1981, 1), names = "Monthly interest rate")
acf(bank.ts)
pacf(bank.ts)
arima010 <- arima(bank.ts, order = c(0,1,0))
library(forecast)
forecast.Arima(arima010, h = 12)
plot(forecast.Arima(arima010, h = 12))
arima010
arima010$arma
arima010$call
paste("arima", c("010", "110", "011", "111", "100", "001", "101"))
paste("arima", c("010", "110", "011", "111", "100", "001", "101"), sep = "")
arima110 <- arima(bank.ts, order = c(1,1,0))
arima011 <- arima(bank.ts, order = c(0,1,1))
arima111 <- arima(bank.ts, order = c(1,1,1))
arima100 <- arima(bank.ts, order = c(1,0,0))
arima001 <- arima(bank.ts, order = c(0,0,1))
arima101 <- arima(bank.ts, order = c(1,0,1))
parse(text = "x")
x <- 42
parse(text = "x")
as.name("arima010")
as.name("arima010")$call
mode(as.name("arima010"))
eval(parse("arima010"))
eval(arima010)
eval("arima010")
do.call("$", c(model, "call"))
model <- paste("arima", c("010", "110", "011", "111", "100", "001", "101"), sep = "")
model <- paste("arima", c("010", "110", "011", "111", "100", "001", "101"), sep = "")
do.call("$", c(model, "call"))
as.name("arima010")
call("arima010")
eval("arima010$call")
eval(2 ^ 2 ^ 3)
expression(2^2^3)
eval(expression(2^2^3))
eval(expression("arima010"))
print(arima010)
eval(parse("print(arima010)"))
eval(parse(text="print(arima010)"))
eval(parse(text = "arima010"))
eval(parse(text = "arima010$sigma2"))
eval(parse(text = c("arima010$sigma2", "arima011$sigma2")))
paste(model, "$sigma2")
paste(model, "$sigma2", sep="")
lapply(paste(model, "$sigma2", sep=""), function(x) eval(parse(text = x)))
sapply(paste(model, "$sigma2", sep=""), function(x) eval(parse(text = x)))
loglik <- sapply(paste(model, "$loglik", sep=""), function(x) eval(parse(text = x)))
loglik
aic <- sapply(paste(model, "$aic", sep=""), function(x) eval(parse(text = x)))
aic
model.comp <- data.frame(model = model, sigma2 = sigma2, loglik = loglik, aic = aic)
sigma2 <- sapply(paste(model, "$sigma2", sep=""), function(x) eval(parse(text = x)))
model.comp <- data.frame(model = model, sigma2 = sigma2, loglik = loglik, aic = aic)
model.comp
model.comp <- data.frame(sigma2 = sigma2, loglik = loglik, aic = aic, row.names = model)
model.comp
plot(model.comp)
forecast.Arima(arima111, h = 12)
plot(forecast.Arima(arima111, h = 12))
arima010
arima111$coef
tsdiag(arima111)
tsdiag(arima111)
auto.arima(bank.ts)
qqplot(arima111$residuals)
qqnorm(arima111$residuals)
qqline(arima111$residuals, col = "red")
auto.arima(diff(bank.ts, lag = 6))
arima210 <- arima(diff(bank.ts, lag = 6), order = c(2,0,0))
tsdiag(arima200)
tsdiag(arima210)
arima210
bank.ts.diff <- diff(bank.ts, lag = 6)
arima210 <- arima(bank.ts.diff, order = c(2,0,0))
tsdiag(arima210)
plot(arima210)
qqnorm(arima210$residuals)
qqline(arima210$residuals)
qqnorm(arima111$residuals)
qqline(arima111$residuals, col = "red")
tsdiag(arima111)
x <- tsdiag(arima111)
str(x)
x
arima111$residuals
plot(arima111$residuals)
str(arima111$residuals)
plot(arima111$residuals, type = h)
plot(arima111$residuals, type = "h")
plot(scale(arima111$residuals), type = "h")
plot(scale(arima111$residuals), type = "h")
plot(scale(arima111$residuals), type = "h", ylab = NULL, main = "Standardized Residuals")
plot(scale(arima111$residuals), type = "h", ylab = "", main = "Standardized Residuals")
acf(arima111$residuals)
acf(arima111$residuals, main = "ACF of residuals")
Box.test(arima111$residuals)
Box.test(arima111$residuals, lag = 12)
Box.test(arima111$residuals, type = "Ljung-Box")
lines(y = 0.5)
abline(y = 0.5)
abline(h = 0.5)
Box.test(arima111$residuals)
str(Box.test(arima111$residuals))
lapply(1:12, function(x) Box.test(arima111$residuals, type = "Ljung-Box")$p.value)
sapply(1:12, function(x) Box.test(arima111$residuals, type = "Ljung-Box", lag = x)$p.value)
abline(h = 0.05)
abline(h = 0.1, lty = 2)
bank.data <- read.table("ReserveBankofAusatraliadata.txt")
bank.ts <- ts(bank.data, frequency = 12, start = c(1981, 1), names = "Monthly interest rate")
arima111 <- arima(bank.ts, order = c(1,1,1))
shapiro.test(arima111$residuals)
shapiro.test(rnorm(100, mean = 5, sd = 3))
library(forecast)
bank.ts
View(bank.data)
bank.ts <- ts(bank.data[1:nrow(bank.data)-3,1], frequency = 12, start = c(1981, 1), names = "Monthly interest rate")
bank.ts <- ts(bank.data[1:(nrow(bank.data)-3),1], frequency = 12, start = c(1981, 1), names = "Monthly interest rate")
forecast.Arima(arima111, h = 3, level = 99)
bank.data <- read.table("ReserveBankofAusatraliadata.txt")
bank.ts <- ts(bank.data[1:(nrow(bank.data)-3),1], frequency = 12, start = c(1981, 1), names = "Monthly interest rate")
arima111 <- arima(bank.ts, order = c(1,1,1))
forecast.Arima(arima111, h = 3, level = 99)
bank.fcst <- forecast(arima111, h = 3, level = 99)
plot(bank.fcst)
lines(bank.ts)
lines(bank.ts, col = "red")
plot(bank.fcst)
bank.test.ts <- ts(bank.data[(nrow(bank.data)-2):nrow(bank.data),1], frequency = 12, start = c(1994, 6), names = "Monthly interest rate")
bank.test.ts
plot(bank.fcst)
lines(bank.test.ts, col = "red")
DJ.data <- read.table("Dow-Jones.industrial.index.txt", row.names = 1)
DJ.ts <- ts(DJ.data[,1], frequency = 12, start = c(1968, 8), names = "Dow-Jones industrial index")
DJ.ts
DJ.ts[1:6]
head(DJ.ts)
window(DJ.ts, start = c(1980,6))
window(DJ.ts, end = c(1980,7))
DJ.data <- read.table("Dow-Jones.industrial.index.txt", row.names = 1)
DJ.data <- ts(DJ.data[,1], frequency = 12, start = c(1968, 8), names = "Dow-Jones industrial index")
DJ.ts <- window(DJ.data, end = c(1980, 7))
DJ.test.ts <- window(DJ.data, start = c(1980,7))
acf(DJ.ts)
pacf(DJ.ts)
acf(diff(DJ.ts))
pacf(diff(DJ.ts))
plot.ts(diff(DJ.ts))
auto.arima(DJ.ts)
adf.test(diff(DJ.ts))
library(tseries)
adf.test(diff(DJ.ts))
Box.test(diff(DJ.ts))
Box.test(diff(DJ.ts), lag = 12)
DJ.data <- read.table("Dow-Jones.industrial.index.txt", row.names = 1)
DJ.data <- ts(DJ.data[,1], frequency = 12, start = c(1968, 8), names = "Dow-Jones industrial index")
DJ.ts <- window(DJ.data, end = c(1980, 7))
DJ.test.ts <- window(DJ.data, start = c(1980,7))
library(tseries)
library(forecast)
auto.arima(DJ.ts)
arima(DJ.ts, order = c(2, 0, 0))
arima(DJ.ts, order = c(2, 1, 0))
arima(DJ.ts, order = c(0, 1, 2))
arima(DJ.ts, order = c(0, 0, 2))
arima(DJ.ts, order = c(0, 1, 1))
arima(DJ.ts, order = c(1, 2, 1))
arima(DJ.ts, order = c(2, 2, 1))
arima(DJ.ts, order = c(1, 2, 2))
arima(DJ.ts, order = c(1, 2, 0))
arima(DJ.ts, order = c(0, 2, 1))
paste(c("arima", q, d, q), sep = "")
p = d = q = 1
paste(c("arima", q, d, q), sep = "")
paste(c("arima", q, d, q), collapse = "")
assign(paste(c("arima", q, d, q), collapse = ""), arima(DJ.ts, order = (q, d, q)))
assign(paste(c("arima", q, d, q), collapse = ""), 2)
do.call("<-", list(paste(c("arima", q, d, q), collapse = ""), 2))
do.call("<-", list(paste(c("arima", q, d, q), collapse = ""), 3))
do.call("<-", list(paste(c("arima", q, d, q), collapse = ""), arima(DJ.ts, order = (q, d, q))))
do.call("<-", list(paste(c("arima", q, d, q), collapse = ""), arima(DJ.ts, order = (p, d, q))))
arima(DJ.ts, order = (p, d, q))
arima(DJ.ts, order = (p0, d, q))
arima(DJ.ts, order = (0, d, q))
arima(DJ.ts, order = (0, 1, 1))
arima(DJ.ts, order = (0,1,1))
assign(paste(c("arima", q, d, q), collapse = ""), arima(DJ.ts, order = c(p, d, q)))
arima111
do.call("<-", list(paste(c("arima", q, d, q), collapse = ""), arima(DJ.ts, order = c(p, d, q))))
model <- c()
for (p in c(0,1,2)) {
for (d in c(0,1,2)) {
for (q in c(0,1,2)) {
do.call("<-", list(paste(c("arima", q, d, q), collapse = ""), arima(DJ.ts, order = c(p, d, q))))
model <- c(model, paste(c("arima", q, d, q), collapse = ""))
}
}
}
for (p in c(0,1,2)) {
for (d in c(0,1,2)) {
for (q in c(0,1,2)) {
do.call("<-", list(paste(c("arima", p, d, q), collapse = ""), arima(DJ.ts, order = c(p, d, q))))
model <- c(model, paste(c("arima", p, d, q), collapse = ""))
}
}
}
DJ.data <- read.table("Dow-Jones.industrial.index.txt", row.names = 1)
DJ.data <- ts(DJ.data[,1], frequency = 12, start = c(1968, 8), names = "Dow-Jones industrial index")
DJ.ts <- window(DJ.data, end = c(1980, 7))
DJ.test.ts <- window(DJ.data, start = c(1980,7))
DJ.test.ts
arima212 <- arima(DJ.ts, order = c(2,1,2))
forecast(arima212, h = 1, level = 90)
forecast(arima212, h = c(1, 12), level = 90)
forecast(arima212, h = 12, level = 90)
forecast(arima212, h = 13, level = 90)
plot(forecast(arima212, h = 13, level = 90))
bank.fcst <- forecast(arima212, h = 13, level = 90)
plot(bank.fcst)
lines(bank.test.ts, col = "red")
DJ.fcst <- forecast(arima212, h = 13, level = 90)
plot(DJ.fcst)
lines(DJ.test.ts, col = "red")
DJ.fcst
DJ.test.ts
DJ.fcst[1]
DJ.fcst$fitted
DJ.fcst$mean
print(DJ.fcst)
data.frame(DJ.fcst$mean, DJ.fcst$lower, DJ.fcst$upper)
DJ.fcst$lower
View(DJ.fcst$lower)
View(DJ.fcst$lower)
View(DJ.fcst$mean)
DJ.fcst$mean
time(DJ.fcst$mean)
View(time(DJ.fcst$mean))
attr(DJ.fcst$mea)
attr(DJ.fcst$mean)
attr(DJ.fcst$mean, "tsp")
DJ.test.ts[c(1,13)]
DJ.test.ts
length(DJ.test.ts)
source("http://bioconductor.org/biocLite.R")
source("http://bioconductor.org/biocLite.R")
biocLite("Biostrings")
library(Biostrings)
reverse("AAAGTTCGTCTTCTGCCG")
reverse("AGTTCGTCTTCTGCCGTA")
reverse("GTATGCTGGCGACCTTCA")
install.packages("quantreg")
library(quantreg)
data("engel")
View(engel)
plot(engel$income, engel$foodexp)
library(np)
install.packages("np")
library(np)
data("cps71")
attach(cps71)
source("https://bioconductor.org/biocLite.R")
setwd("~/Documents/Note/STAT6348/HW1")
egg.data <- read.csv("data.csv")
View(egg.data)
egg.data <- read.csv("data.csv")
View(egg.data)
egg.data <- read.csv("data.csv")
View(egg.data)
egg.data <- read.csv("data.csv", stringsAsFactors = FALSE)
fit <- aov(THICKNESS ~ HOUSING, data = egg.data)
fit
plot(fit)
summary(fit)
plot(egg.data$HOUSING, egg.data$THICKNESS)
plot(as.factor(egg.data$HOUSING), egg.data$THICKNESS)
scale(egg.data$THICKNESS)
plot(scale(egg.data$THICKNESS))
plot(density(scale(egg.data$THICKNESS)))
plot(density(scale(egg.data$OVERRUN)))
plot(density(scale(egg.data$STRENGTH)))
apply(egg.data, 1, scale)
apply(egg.data[,-1], 1, scale)
apply(egg.data[,-1], 2, scale)
egg.data[,-1] <- apply(egg.data[,-1], 2, scale)
View(egg.data)
plot(as.factor(egg.data$HOUSING), egg.data$THICKNESS)
(5.34 + 7.72 + 8.56)/3
var(c(5.34, 7.72, 8.56))
fit <- manova(egg.data[-1] ~ HOUSING, data = egg.data)
fit <- manova(cbind(egg.data$THICKNESS, egg.data$OVERRUN, egg.data$STRENGTH) ~ HOUSING, data = egg.data)
summary(fit)
summary(fit, test = "Wilks")
summary.aov(fit)
View(egg.data)
fit <- manova(egg.data[,2:4] ~ HOUSING, data = egg.data)
cbind(egg.data$THICKNESS, egg.data$OVERRUN, egg.data$STRENGTH)
class(cbind(egg.data$THICKNESS, egg.data$OVERRUN, egg.data$STRENGTH))
fit <- manova(as.matrix(egg.data[,2:4]) ~ HOUSING, data = egg.data)
summary.aov(fit)
library(MVN)
install.packages("MVN")
library(MVN)
mardiaTest(egg.data, qqplot = TRUE)
mardiaTest(egg.data[,-1], qqplot = TRUE)
install.packages("ICSNP")
library(ICSNP)
HotellingsT2(egg.data[1:10,-1], egg.data[11:16,-1])
plot(egg.data$HOUSING, egg.data$THICKNESS)
plot(as.factor(egg.data$HOUSING), egg.data$THICKNESS)
plot(as.factor(egg.data$HOUSING), egg.data$OVERRUN)
plot(as.factor(egg.data$HOUSING), egg.data$STRENGTH)
egg.cage <- egg.data[egg.data$HOUSING == "CAGE",-1]
View(egg.cage)
egg.cage <- egg.data[egg.data$HOUSING == "CAGE",-1]
egg.free <- egg.data[egg.data$HOUSING == "FREE",-1]
egg.barn <- egg.data[egg.data$HOUSING == "BARN",-1]
egg.organic <- egg.data[egg.data$HOUSING == "ORGANIC",-1]
HotellingsT2(egg.barn, egg.free)
HotellingsT2(egg.barn, egg.free, test = "chi")
mardiaTest(egg.data[,-1], qqplot = TRUE)
mardiaTest(egg.cage, qqplot = TRUE)
mardiaTest(egg.free, qqplot = TRUE)
mardiaTest(egg.barn, qqplot = TRUE)
mardiaTest(egg.organic, qqplot = TRUE)
plot(as.factor(egg.data$HOUSING), egg.data$THICKNESS)
plot(as.factor(egg.data$HOUSING), egg.data$OVERRUN)
plot(as.factor(egg.data$HOUSING), egg.data$STRENGTH)
